<h2>Group Progress Over Time</h2>
<label for="timeframe-select">Select Timeframe:</label>
<select id="timeframe-select">
  <option value="daily">Daily</option>
  <option value="monthly">Monthly</option>
  <option value="yearly">Yearly</option>
</select>


<canvas id="groupBarChart" width="600" height="300"></canvas>
<canvas id="workoutLineChart" width="600" height="300"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const groupCounts = {{{json workoutStats.groupCounts}}};
  const workoutTimeline = {{{json workoutStats.workoutTimeline}}};

  const barCtx = document.getElementById('groupBarChart').getContext('2d');
  const workoutLineCtx = document.getElementById('workoutLineChart').getContext('2d');

  let barChart, workoutLineChart;

  function renderBarChart(timeframe) {
    const data = groupCounts[timeframe];
    const labels = Object.keys(data);
    const values = Object.values(data);

    if (barChart) barChart.destroy();
    barChart = new Chart(barCtx, {
      type: 'bar',
      data: {
        labels,
        datasets: [{
          label: `Completed Groups (${timeframe})`,
          data: values,
          backgroundColor: 'rgba(153, 102, 255, 0.6)'
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: { beginAtZero: true }
        }
      }
    });
  }

  function renderWorkoutLineChart() {
    const dates = Object.keys(workoutTimeline).sort();
    const values = dates.map(date => workoutTimeline[date]);

    workoutLineChart = new Chart(workoutLineCtx, {
      type: 'line',
      data: {
        labels: dates,
        datasets: [{
          label: 'Total Workout Weight Over Time',
          data: values,
          borderColor: 'rgba(255, 99, 132, 0.8)',
          fill: false
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: { beginAtZero: true }
        }
      }
    });
  }

  
  renderBarChart('daily');
  renderWorkoutLineChart();

  document.getElementById('timeframe-select').addEventListener('change', (e) => {
    renderBarChart(e.target.value);
  });
</script>